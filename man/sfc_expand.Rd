% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfc_expand.R, R/sfc_rules.R
\name{sfc_expand,sfc_hilbert-method}
\alias{sfc_expand,sfc_hilbert-method}
\alias{sfc_expand}
\alias{sfc_expand,sfc_peano-method}
\alias{sfc_expand,sfc_meander-method}
\alias{sfc_expand,sfc_rules-method}
\title{Expand the curve to the next level}
\usage{
\S4method{sfc_expand}{sfc_hilbert}(p, code)

\S4method{sfc_expand}{sfc_peano}(p, code = 1)

\S4method{sfc_expand}{sfc_meander}(p, code)

\S4method{sfc_expand}{sfc_rules}(p, letters, code = 1L, flip = FALSE, by = "Cpp", rot = NULL)
}
\arguments{
\item{p}{An \code{sfc_rules} object.}

\item{code}{The transverse code.}

\item{letters}{A list of base patterns in letters, must be a factor.}

\item{flip}{For the Peano curve and the Meander curves, each unit can be flipped without affecting other parts in the curve. This argument
controls whether to flip the unit. Since currently it only works on the Peano curve and the Meander curve, \code{flip} should be a logical
vector of length one or length of 9. Whether it flips horizontally, vertically or against the diagonal line is automatically choosen.}

\item{by}{Which implemnetation? Only for the testing purpose.}

\item{rot}{Rotations of \code{letters}.}
}
\value{
An object in the same class as the input. \code{sfc_expand()} on the \code{sfc_rules} objects returns an \code{sfc_sequence} object.
}
\description{
Expand the curve to the next level
}
\details{
For the Hilbert curve and Meander curve, as long as the transverse code of the first base pattern in the sequence is determinted,
the transverse codes for other base patterns in the sequence are all determined. For the Peano curve, \code{code} is always 1.

These functions are mainly used internally.
}
\examples{
p = sfc_hilbert("I", 11)
sfc_expand(p, 2) # I|211
p = sfc_peano("I", 11)
sfc_expand(p, 2) # I|211
p = sfc_meander("I", 11)
sfc_expand(p, 2) # I|211
sfc_expand(SFC_RULES_HILBERT, 
    factor(c("I", "R", "L"), levels = sfc_universe(SFC_RULES_HILBERT)))
}
